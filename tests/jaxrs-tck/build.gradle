plugins {
    id "java-library"
    id "io.micronaut.build.internal.jaxrs-base"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation mn.micronaut.inject.java
    implementation mn.micronaut.inject
    implementation mn.micronaut.aop
    implementation mn.micronaut.context
    implementation mn.micronaut.http.server.netty
    implementation mn.micronaut.jackson.databind

    implementation projects.micronautJaxrsServer
    implementation projects.micronautJaxrsClient
    implementation projects.micronautJaxrsProcessor
    implementation libs.jakarta.jaxrs.tck.tests
    implementation mnLogging.slf4j.jul.to.slf4j

    runtimeOnly(mnLogging.logback.classic)

    testImplementation mnTest.junit.jupiter.api
    testImplementation libs.junit.platform.suite.engine
    testImplementation(libs.jakarta.jaxrs.tck.tests) {
        artifact {
            classifier = "sources"
        }
    }

    testRuntimeOnly mnLogging.logback.classic
    testRuntimeOnly mnTest.junit.jupiter.engine
}

test {
    scanForTestClasses false
    systemProperty("junit.jupiter.extensions.autodetection.enabled", "true")
    systemProperty("java.util.logging.config.class", "x.LoggingConfig")
    systemProperty("webServerHost", "localhost")
    systemProperty("webServerPort", "8123")
    systemProperty("micronaut.testing.jaxrs.min.clients", "5")
    useJUnitPlatform()
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
}
